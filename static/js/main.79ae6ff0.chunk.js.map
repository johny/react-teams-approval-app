{"version":3,"sources":["api/index.ts","features/teams/teamsSlice.ts","helpers/index.ts","features/teams/teamsListView.tsx","features/approvalSteps/approvalStepsSlice.ts","components/money.tsx","features/approvalSteps/approvalStep.tsx","features/approvalSteps/approvalStepForm.tsx","features/approvalSteps/approvalStepsView.tsx","app/App.tsx","app/rootReducer.ts","app/store.ts","api/localStorage.ts","index.tsx"],"names":["BASE_API","getTeams","a","requestUrl","axios","get","data","getUsers","teams","createSlice","name","initialState","teamsById","usersById","isLoading","error","reducers","getDataStart","state","getDataSuccess","action","payload","users","forEach","user","id","firstName","first_name","lastName","last_name","team","getDataError","actions","getUserName","TeamItem","approvers","onTeamSelect","usersList","slice","map","join","length","approversList","className","onClick","data-testid","TeamsListView","dispatch","useDispatch","useSelector","approvalStepsById","approvalSteps","useEffect","Object","keys","Promise","all","toString","teamId","userId","values","filter","step","key","createApprovalStep","rule","deleteApprovalStep","Money","value","currency","ApprovalStep","approvalUser","onRemove","useState","isEditing","setIsEditing","lowerBound","upperBound","renderBounds","ApprovalStepForm","onCancel","onSubmit","lowerInputRef","useRef","upperInputRef","userSelectRef","type","defaultValue","ref","placeholder","u","lowerValue","current","upperValue","ApprovalStepsView","isAdding","setIsAdding","teamApprovalSteps","sort","b","teamUsers","some","steps","stepId","renderApprovalSteps","draftStep","nanoid","parseInt","App","currentTeam","setCurrentTeam","rootReducer","combineReducers","teamsReducer","approvalStepsResucer","store","configureStore","reducer","preloadedState","serializedState","localStorage","getItem","JSON","parse","err","loadState","subscribe","stringify","setItem","saveState","getState","root","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.79ae6ff0.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst BASE_API = `https://s3-eu-west-1.amazonaws.com/spx-development`;\n\nexport interface ApiTeam {\n  id: string;\n  name: string;\n  users: string[];\n}\n\nexport interface ApiUser {\n  id: string;\n  first_name: string;\n  last_name: string;\n  email: string;\n}\n\n/**\n * Fetches list of teams from SPX api\n */\nexport const getTeams = async () => {\n  const requestUrl = `${BASE_API}/contents/teams`;\n\n  try {\n    const { data } = await axios.get<ApiTeam[]>(requestUrl);\n    return data;\n  } catch (err) {\n    throw err;\n  }\n};\n\nexport const getUsers = async () => {\n  const requestUrl = `${BASE_API}/contents/users`;\n\n  try {\n    const { data } = await axios.get<ApiUser[]>(requestUrl);\n    return data;\n  } catch (err) {\n    throw err;\n  }\n};\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\nimport { getTeams, getUsers, ApiTeam, ApiUser } from \"../../api\";\nimport { AppThunk } from \"../../app/store\";\nexport interface Team {\n  id: string;\n  name: string;\n  users: string[];\n}\n\nexport interface User {\n  id: string;\n  firstName: string;\n  lastName: string;\n}\n\ninterface TeamsState {\n  teamsById: Record<string, Team>;\n  usersById: Record<string, User>;\n  isLoading: boolean;\n  error: string | null;\n}\n\ninterface GetDataActionPayload {\n  teams: ApiTeam[];\n  users: ApiUser[];\n}\n\nconst teamsInitialState: TeamsState = {\n  teamsById: {},\n  usersById: {},\n  isLoading: false,\n  error: null,\n};\n\n// Create slice of redux store using redux-toolkit\nconst teams = createSlice({\n  name: \"teams\",\n  initialState: teamsInitialState,\n  reducers: {\n    getDataStart: (state: TeamsState) => {\n      state.isLoading = true;\n      state.error = null;\n    },\n\n    getDataSuccess: (\n      state: TeamsState,\n      action: PayloadAction<GetDataActionPayload>\n    ) => {\n      state.isLoading = false;\n      state.error = null;\n      const { teams, users } = action.payload;\n\n      // normalize teams and users\n      users.forEach(\n        (user) =>\n          (state.usersById[user.id] = {\n            id: user.id,\n            firstName: user.first_name,\n            lastName: user.last_name,\n          })\n      );\n\n      teams.forEach((team) => (state.teamsById[team.id] = { ...team }));\n    },\n\n    getDataError: (state: TeamsState, action: PayloadAction<string>) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n  },\n});\n\n// Export slice reducer\nexport default teams.reducer;\n\n// Get action creators\nconst { getDataStart, getDataSuccess, getDataError } = teams.actions;\n\n// Provide Thunk for fetching data\nexport const fetchTeamsAndUsers = (): AppThunk => async (dispatch) => {\n  try {\n    dispatch(getDataStart());\n    const [teams, users] = await Promise.all([getTeams(), getUsers()]);\n    dispatch(getDataSuccess({ teams, users }));\n  } catch (error) {\n    dispatch(getDataError(error.toString()));\n  }\n};\n","import { User } from \"../features/teams/teamsSlice\";\n\nexport const getUserName = (user: User) => `${user.firstName} ${user.lastName}`;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { RootState } from \"../../app/rootReducer\";\n\nimport { fetchTeamsAndUsers, Team, User } from \"./teamsSlice\";\n\nimport \"./teams.css\";\nimport { getUserName } from \"../../helpers\";\n\ninterface TeamProps {\n  team: Team;\n  users: User[];\n  approvers: User[];\n  onTeamSelect: (id: string) => void;\n}\n\nconst USERS_TO_DISPLAY = 3;\n\nconst TeamItem: React.FC<TeamProps> = ({\n  team,\n  users,\n  approvers,\n  onTeamSelect,\n}) => {\n  let usersList = users.slice(0, USERS_TO_DISPLAY).map(getUserName).join(\", \");\n  if (users.length > USERS_TO_DISPLAY) {\n    usersList = `${usersList}...`;\n  }\n\n  let approversList = approvers\n    .slice(0, USERS_TO_DISPLAY)\n    .map(getUserName)\n    .join(\", \");\n  if (approvers.length > USERS_TO_DISPLAY) {\n    approversList = `${approversList}...`;\n  }\n\n  return (\n    <div\n      className=\"Team\"\n      onClick={() => onTeamSelect(team.id)}\n      data-testid={`Team-${team.id}`}\n    >\n      <strong className=\"Team__name\">{team.name}</strong>\n      <div className=\"Team__users Team__users--all\">Users: {usersList}</div>\n      <div className=\"Team__users Team__users--approvers\">\n        Approvers: {approversList}\n      </div>\n    </div>\n  );\n};\n\ninterface TeamsListViwProps {\n  onTeamSelect: (id: string) => void;\n}\n\nexport const TeamsListView: React.FC<TeamsListViwProps> = ({\n  onTeamSelect,\n}) => {\n  const dispatch = useDispatch();\n\n  const { isLoading, error, teamsById, usersById } = useSelector(\n    (state: RootState) => state.teams\n  );\n  const { approvalStepsById } = useSelector(\n    (state: RootState) => state.approvalSteps\n  );\n\n  useEffect(() => {\n    if (Object.keys(teamsById).length === 0) {\n      dispatch(fetchTeamsAndUsers());\n    }\n  }, [teamsById, dispatch]);\n\n  const renderTeamsList = () => {\n    return Object.keys(teamsById).map((teamId) => {\n      const team = teamsById[teamId];\n      const users = team.users.map((userId) => usersById[userId]);\n      const approvers = Object.values(approvalStepsById)\n        .filter((step) => step.teamId === teamId)\n        .map((step) => usersById[step.userId]);\n\n      return (\n        <TeamItem\n          key={teamId}\n          team={team}\n          users={users}\n          approvers={approvers}\n          onTeamSelect={onTeamSelect}\n        />\n      );\n    });\n  };\n\n  return (\n    <div className=\"Page\">\n      <h2>Teams</h2>\n      {isLoading && \"Loading teams...\"}\n      {error && `Error: ${error}`}\n      {!isLoading && !error && renderTeamsList()}\n    </div>\n  );\n};\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\nexport interface ApprovalStep {\n  id: string;\n  teamId: string;\n  userId: string;\n  lowerBound: number;\n  upperBound: number | null;\n}\n\ninterface ApprovalStepsState {\n  approvalStepsById: Record<string, ApprovalStep>;\n}\n\nconst initialState: ApprovalStepsState = {\n  approvalStepsById: {},\n};\n\nconst approvalSteps = createSlice({\n  name: \"approvalSteps\",\n  initialState,\n  reducers: {\n    createApprovalStep: (state, action: PayloadAction<ApprovalStep>) => {\n      const rule = action.payload;\n      state.approvalStepsById[rule.id] = rule;\n    },\n    deleteApprovalStep: (state, action: PayloadAction<string>) => {\n      delete state.approvalStepsById[action.payload];\n    },\n  },\n});\n\nexport const { createApprovalStep, deleteApprovalStep } = approvalSteps.actions;\n\nexport default approvalSteps.reducer;\n","import React from \"react\";\n\ninterface MoneyProps {\n  value: number;\n  currency?: string;\n}\n\nexport const Money: React.FC<MoneyProps> = ({ value, currency = \"€\" }) => {\n  // const formatter = new Intl.NumberFormat('en-UK', { style: 'currency', currency })\n  // const stringValue = formatter.format(value)\n  return <span className=\"Money\">{value}€</span>;\n};\n","import React, { useState } from \"react\";\n\nimport { ApprovalStep as ApprovalStepInterface } from \"./approvalStepsSlice\";\nimport { Money } from \"../../components/money\";\n\nimport \"./approvalStep.css\";\n\ninterface ApprovalStepProps {\n  step: ApprovalStepInterface;\n  approvalUser: string;\n  onRemove: () => void;\n}\n\nexport const ApprovalStep: React.FC<ApprovalStepProps> = ({\n  step,\n  approvalUser,\n  onRemove,\n}) => {\n  const [isEditing, setIsEditing] = useState(false);\n\n  const renderBounds = (step: ApprovalStepInterface) => {\n    return step.lowerBound === 0 && step.upperBound ? (\n      <>\n        Up to <Money value={step.upperBound} />\n      </>\n    ) : step.upperBound === null ? (\n      <>\n        Above <Money value={step.lowerBound} />\n      </>\n    ) : (\n      <>\n        From <Money value={step.lowerBound} /> to{\" \"}\n        <Money value={step.upperBound} />\n      </>\n    );\n  };\n\n  return (\n    <div className=\"ApprovalStep\">\n      <div className=\"ApprovalStep__bounds\">\n        {renderBounds(step)}\n        <div className=\"ApprovalStep__actions\">\n          {!isEditing && (\n            <>\n              <button onClick={() => setIsEditing(true)}>edit</button>\n              <button onClick={onRemove}>remove</button>\n            </>\n          )}\n        </div>\n      </div>\n      <div className=\"ApprovalStep__user\">{approvalUser}</div>\n    </div>\n  );\n};\n","import React, { useState, useRef } from \"react\";\n\nimport \"./approvalStepForm.css\";\n\ntype User = {\n  id: string;\n  name: string;\n};\n\ninterface ApprovalStepFormProps {\n  onCancel: () => void;\n  onSubmit: (\n    lowerValue: string,\n    upperValue: string | undefined,\n    userIdValue: string\n  ) => void;\n  users: User[];\n}\n\nexport const ApprovalStepForm: React.FC<ApprovalStepFormProps> = ({\n  onCancel,\n  onSubmit,\n  users,\n}) => {\n  const lowerInputRef = useRef<HTMLInputElement>(null);\n  const upperInputRef = useRef<HTMLInputElement>(null);\n  const userSelectRef = useRef<HTMLSelectElement>(null);\n\n  const handleSubmit = () => {\n    const lowerValue = lowerInputRef?.current?.value;\n    const upperValue = upperInputRef?.current?.value;\n    const userId = userSelectRef?.current?.value;\n\n    if (userId && lowerValue) {\n      onSubmit(lowerValue, upperValue, userId);\n    }\n  };\n\n  const handleCancel = () => {\n    onCancel();\n  };\n\n  return (\n    <div className=\"Form ApprovalStepForm\">\n      <div className=\"Form__row\">\n        <label>\n          {\"From \"}\n          <input type=\"number\" defaultValue={0} ref={lowerInputRef} />\n        </label>\n        <label>\n          {\"To \"}\n          <input type=\"number\" ref={upperInputRef} />\n        </label>\n      </div>\n      <div className=\"Form__row\">\n        <label>\n          {\"Approval by \"}\n          <select ref={userSelectRef} placeholder=\"Select user\">\n            <option value=\"\"></option>\n            {users.map((u) => (\n              <option value={u.id} key={u.id}>\n                {u.name}\n              </option>\n            ))}\n          </select>\n        </label>\n      </div>\n      <div className=\"Form__actions\">\n        <button onClick={handleSubmit}>Submit approval step</button>\n        {\" or \"}\n        <button onClick={handleCancel}>Cancel</button>\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { nanoid } from \"nanoid\";\n\nimport { RootState } from \"../../app/rootReducer\";\n\nimport {\n  createApprovalStep,\n  deleteApprovalStep,\n  ApprovalStep as ApprovalStepInterface,\n} from \"./approvalStepsSlice\";\n\nimport { ApprovalStep } from \"./approvalStep\";\nimport { ApprovalStepForm } from \"./approvalStepForm\";\nimport { getUserName } from \"../../helpers\";\n\ninterface ApprovalStepsViewProps {\n  teamId: string;\n  onCancel: () => void;\n}\n\nexport const ApprovalStepsView: React.FC<ApprovalStepsViewProps> = ({\n  teamId,\n}) => {\n  const team = useSelector((state: RootState) => state.teams.teamsById[teamId]);\n  const approvalSteps = useSelector(\n    (state: RootState) => state.approvalSteps.approvalStepsById\n  );\n  const usersById = useSelector((state: RootState) => state.teams.usersById);\n\n  const dispatch = useDispatch();\n\n  const [isAdding, setIsAdding] = useState(false);\n\n  if (!team) {\n    return null;\n  }\n\n  const teamApprovalSteps = Object.values(approvalSteps)\n    .filter((step) => step.teamId === team.id)\n    .sort((a, b) => a.lowerBound - b.lowerBound);\n  const teamUsers = team.users\n    .filter(\n      (userId) => !teamApprovalSteps.some((step) => step.userId === userId)\n    ) // filter out user that were already selected\n    .map((userId) => {\n      const user = usersById[userId];\n      return { id: user.id, name: getUserName(user) };\n    });\n\n  const handleSubmit = (\n    lowerBound: string,\n    upperBound: string | undefined,\n    userId: string\n  ) => {\n    const draftStep: ApprovalStepInterface = {\n      id: nanoid(),\n      lowerBound: parseInt(lowerBound, 10),\n      upperBound: upperBound ? parseInt(upperBound, 10) : null, // If not set by form, we use null\n      userId,\n      teamId: team.id,\n    };\n\n    dispatch(createApprovalStep(draftStep));\n    setIsAdding(false);\n  };\n\n  const handleCancel = () => {\n    setIsAdding(false);\n  };\n  const handleRemove = (stepId: string) => {\n    dispatch(deleteApprovalStep(stepId));\n  };\n\n  const renderApprovalSteps = () => {\n    const steps = teamApprovalSteps.map((step) => {\n      return (\n        <ApprovalStep\n          key={step.id}\n          step={step}\n          onRemove={() => handleRemove(step.id)}\n          approvalUser={getUserName(usersById[step.userId])}\n        />\n      );\n    });\n\n    return <>{steps}</>;\n  };\n\n  return (\n    <>\n      <h2>Set up approvers</h2>\n      <p>Who can approve requests of team {team.name}?</p>\n\n      {renderApprovalSteps()}\n      {isAdding ? (\n        <ApprovalStepForm\n          users={teamUsers}\n          onCancel={handleCancel}\n          onSubmit={handleSubmit}\n        />\n      ) : (\n        <button onClick={() => setIsAdding(true)}>Add approval step</button>\n      )}\n    </>\n  );\n};\n","import React, { useState } from \"react\";\n\nimport \"./App.css\";\n\nimport { TeamsListView } from \"../features/teams/teamsListView\";\nimport { ApprovalStepsView } from \"../features/approvalSteps/approvalStepsView\";\n\nfunction App() {\n  const [currentTeam, setCurrentTeam] = useState<string | null>(null);\n\n  const handleTeamSelect = (id: string) => setCurrentTeam(id);\n  const onCancel = () => setCurrentTeam(null);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <h1>Team approvals admin</h1>\n      </header>\n      <main className=\"App__main\">\n        <TeamsListView onTeamSelect={handleTeamSelect} />\n      </main>\n      {currentTeam && (\n        <div className=\"App__overlay\">\n          <div className=\"App__overlay-content\">\n            <button className=\"App__overlay-cancel\" onClick={onCancel}>\n              &times;\n            </button>\n            <ApprovalStepsView teamId={currentTeam} onCancel={onCancel} />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from \"@reduxjs/toolkit\";\n\nimport teamsReducer from \"../features/teams/teamsSlice\";\nimport approvalStepsResucer from \"../features/approvalSteps/approvalStepsSlice\";\n\nconst rootReducer = combineReducers({\n  teams: teamsReducer,\n  approvalSteps: approvalStepsResucer,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nexport default rootReducer;\n","import { configureStore, Action } from \"@reduxjs/toolkit\";\nimport { ThunkAction } from \"redux-thunk\";\n\nimport rootReducer, { RootState } from \"./rootReducer\";\nimport { saveState, loadState } from \"../api/localStorage\";\n\nconst store = configureStore({\n  reducer: rootReducer,\n  preloadedState: loadState(),\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type AppThunk = ThunkAction<void, RootState, unknown, Action<string>>;\n\nstore.subscribe(() => {\n  saveState(store.getState());\n});\n\nexport default store;\n","import { RootState } from \"../app/rootReducer\";\n\nexport const loadState = () => {\n  try {\n    const serializedState = localStorage.getItem(\"state\");\n    if (serializedState === null) {\n      return undefined;\n    }\n    return JSON.parse(serializedState);\n  } catch (err) {\n    return undefined;\n  }\n};\n\nexport const saveState = (state: RootState) => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem(\"state\", serializedState);\n  } catch (err) {\n    // Ignore write errors.\n  }\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport \"./index.css\";\n\nimport App from \"./app/App\";\nimport store from \"./app/store\";\n\nconst render = () => {\n  const root = document.getElementById(\"root\");\n  ReactDOM.render(\n    <React.StrictMode>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </React.StrictMode>,\n    root\n  );\n};\n\nrender();\n"],"sourceRoot":""}